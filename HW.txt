1.
SELECT 
s.name AS "Salesman Name",
c.cust_name As "Customer Name", 
c.city AS "Customer City"
FROM salesman s,customer c
WHERE s.city = c.city;


2.
SELECT 
o.ord_no,
o.purch_amt,
c.cust_name AS "Customer Name",
c.city AS "Customer City"
FROM orders o,customer c
WHERE c.customer_id = c.customer_id 
AND o.purch_amt BETWEEN 500 AND 2000;


3.
SELECT 
c.cust_name AS "Customer Name",
c.city AS "Customer City", 
s.name AS "Salesman", 
s.commission
FROM customer c
INNER JOIN salesman s
ON c.salesman_id = s.salesman_id;


4.
SELECT 
c.cust_name AS "Customer Name", 
c.city,
s.name AS "Salesman",
s.commission 
FROM customer c
INNER JOIN salesman s 
ON c.salesman_id = s.salesman_id 
WHERE s.commission>.12;


5.
SELECT 
c.cust_name AS "Customer Name", 
c.city AS "Customer City",
s.name AS "Salesman",
s.city,
s.commission  
FROM customer c
INNER JOIN salesman s 
ON c.salesman_id = s.salesman_id 
WHERE s.commission > 0.12 
AND c.city <> s.city;

6.
SELECT 
o.ord_no,
o.ord_date,
o.purch_amt,
c.cust_name AS "Customer Name",
c.grade,
s.name AS "Salesman",
s.commission
FROM orders o
INNER JOIN customer c
ON o.customer_id = c.customer_id 
INNER JOIN salesman s
ON o.salesman_id=s.salesman_id;

7.
SELECT * 
FROM orders 
NATURAL JOIN customer  
NATURAL JOIN salesman;

8.
SELECT 
c.cust_name AS "Customer Name",
c.city AS "Customer City",
c.grade,
s.name AS "Salesman",
s.city AS "Salesman City"
FROM customer c
LEFT JOIN salesman s
ON c.salesman_id = s.salesman_id 
order by c.customer_id;

9.
SELECT 
c.cust_name,
c.city AS "Customer City",
c.grade,
s.name AS "Salesman",
s.city AS "Salesman City"
FROM customer c
LEFT JOIN salesman s
ON c.salesman_id = s.salesman_id
WHERE c.grade < 300
ORDER BY c.customer_id;


10.
SELECT 
c.cust_name AS "Customer Name",
c.city AS "Customer City",
o.ord_no,
o.ord_date,
o.purch_amt AS "Order Amount"
FROM customer c
LEFT JOIN orders o
ON c.customer_id = o.customer_id
ORDER BY o.ord_date;

11.
SELECT 
c.cust_name AS "Customer Name",
c.city AS "Customer City",
o.ord_no,
o.ord_date,
o.purch_amt AS "Order Amount",
s.name AS "Salesman Name",
s.commission
FROM customer c
LEFT JOIN orders o
ON c.customer_id = o.customer_id
LEFT JOIN salesman s
ON s.salesman_id= o.salesman_id

12.
SELECT 
c.cust_name,
c.city AS "Customer City",
c.grade, 
s.name AS "Salesman",
s.city AS "Salesman City"
FROM customer c
RIGHT JOIN salesman s
ON c.salesman_id = s.salesman_id 
ORDER BY s.salesman_id;

13.
SELECT 
c.cust_name AS "Customer Name",
c.city,
c.grade, 
s.name AS "Salesman", 
o.ord_no,
o.ord_date,
o.purch_amt
FROM customer c 
RIGHT JOIN salesman s
ON s.salesman_id = c.salesman_id 
RIGHT JOIN orders o
ON o.customer_id = c.customer_id;

14.
SELECT 
c.cust_name,
c.city,
c.grade, 
s.name AS "Salesman", 
o.ord_no,
o.ord_date,
o.purch_amt
FROM customer c
RIGHT JOIN salesman s
ON s.salesman_id = c.salesman_id
LEFT JOIN orders o
ON o.customer_id = c.customer_id
WHERE o.purch_amt>=2000 
AND c.grade IS NOT NULL;

15.
SELECT 
c.cust_name,
c.city,
o.ord_no,
o.ord_date,
o.purch_amt AS "Order Amount" 
FROM customer c 
LEFT JOIN orders o 
ON c.customer_id = o.customer_id;

16.
SELECT 
c.cust_name,
c.city,
o.ord_no,
o.ord_date,
o.purch_amt AS "Order Amount" 
FROM customer c 
FULL JOIN orders o
ON c.customer_id = o.customer_id 
WHERE c.grade IS NOT NULL;

17.
SELECT * 
FROM salesman a 
CROSS JOIN customer b;

18.
SELECT * 
FROM salesman s 
CROSS JOIN customer c 
WHERE s.city IS NOT NULL;

19.
SELECT * 
FROM salesman s 
CROSS JOIN  customer c 
WHERE s.city IS NOT NULL 
AND c.grade IS NOT NULL;

20.
SELECT * 
FROM salesman a 
CROSS JOIN customer b 
WHERE a.city IS NOT NULL 
AND b.grade IS NOT NULL 
AND  a.city<>b.city;

21.
SELECT *
FROM item_mast i
INNER JOIN company_mast c
ON i.pro_com = c.com_id; 

22.
SELECT AVG(pro_price), c.com_name
FROM item_mast i
INNER JOIN company_mast c
ON i.pro_com= c.com_id

23.
SELECT AVG(pro_price), c.com_name
FROM item_mast i 
INNER JOIN company_mast c 
ON i.pro_com= c.com_id 
GROUP BY c.com_name; 

24.
SELECT AVG(pro_price), c.com_name
FROM item_mast i 
INNER JOIN company_mast c 
ON i.pro_com= c.com_id 
GROUP BY c.com_name; 
HAVING AVG(pro_price) >= 350;

25.
SELECT i.pro_name, 
i.pro_price, 
c.com_name
FROM item_mast i 
INNER JOIN company_mast c
ON i.pro_com = c.com_id
AND i.pro_price =
(
SELECT MAX(i.pro_price)
FROM item_mast I
WHERE I.pro_com = c.com_id
);

26.
SELECT 
emp_idno, 
e.emp_fname AS "First Name", 
e.emp_lname AS "Last Name",
d.dpt_name AS "Department", 
e.emp_dept, 
d.dpt_code, 
d.dpt_allotment
FROM emp_details e 
INNER JOIN emp_department d 
ON e.emp_dept = d.dpt_code;

27.
SELECT 
t.emp_fname AS "First Name", 
t.emp_lname AS "Last Name", 
p.dpt_name AS "Department", 
p.dpt_allotment AS "Amount Allotted"
FROM emp_details t
INNER JOIN emp_department p
ON t.emp_dept = p.dpt_code;

28.
SELECT 
t.emp_fname AS "First Name", 
t.emp_lname AS "Last Name" 
FROM emp_details t
INNER JOIN emp_department p 
ON t.emp_dept = p.dpt_code 
AND p.dpt_allotment > 50000;

29.
SELECT p.dpt_name
FROM emp_details t
INNER JOIN emp_department p
ON t.emp_dept = p.dpt_code
GROUP BY p.dpt_name
HAVING COUNT(*) > 2;